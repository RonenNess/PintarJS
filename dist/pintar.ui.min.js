(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}(g.PintarJS||(g.PintarJS={})).UI=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){"use strict";module.exports={TopLeft:"TopLeft",TopCenter:"TopCenter",TopRight:"TopRight",CenterLeft:"CenterLeft",Center:"Center",CenterRight:"CenterRight",BottomLeft:"BottomLeft",BottomCenter:"BottomCenter",BottomRight:"BottomRight",Auto:"Auto",AutoInline:"AutoInline",AutoInlineNoBreak:"AutoInlineNoBreak",Fixed:"Fixed"}},{}],2:[function(require,module,exports){module.exports={Default:"default",Pointer:"pointer"}},{}],3:[function(require,module,exports){"use strict";const Container=require("./container");const PintarJS=require("../pintar");const SizeModes=require("../size_modes");const SlicedSprite=require("./sliced_sprite");const Paragraph=require("./paragraph");const Anchors=require("../anchors");const Cursors=require("../cursor_types");class Button extends Container{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);this.size.x=100;this.size.xMode=SizeModes.Percents;var textureScale=this.__getFromOptions(options,"textureScale",1);this.size.y=this.__getFromOptions(options,"heightInPixels")||(this.__getFromOptions(options,"externalSourceRect")?this.__getFromOptions(options,"externalSourceRect").height*textureScale:100);this.size.yMode=SizeModes.Pixels;this.text=null;this.isChecked=false;this.toggleModeEnabled=this.__getFromOptions(options,"toggleMode",false);var color=this.__getFromOptions(options,"color",PintarJS.Color.white());var initParagraph=paragraph=>{paragraph._setParent(this);paragraph.anchor=Anchors.Center;paragraph.alignment="center"};if(options.paragraphSkin){this._paragraph=new Paragraph(theme,options.paragraphSkin);initParagraph(this._paragraph)}if(options.mouseHoverParagraphSkin){this._paragraphHover=new Paragraph(theme,options.mouseHoverParagraphSkin);initParagraph(this._paragraphHover)}else{this._paragraphHover=this._paragraph}if(options.mouseDownParagraphSkin){this._paragraphDown=new Paragraph(theme,options.mouseDownParagraphSkin);initParagraph(this._paragraphDown)}else{this._paragraphDown=this._paragraphHover||this._paragraph}var texture=this.__getFromOptions(options,"texture");if(options.externalSourceRect){this._sprite=new SlicedSprite({texture:texture,externalSourceRect:options.externalSourceRect,internalSourceRect:options.internalSourceRect,textureScale:textureScale},"_");this._sprite.anchor=Anchors.Fixed;this._sprite.color=color}if(options.mouseHoverExternalSourceRect){this._spriteHover=new SlicedSprite({texture:texture,externalSourceRect:options.mouseHoverExternalSourceRect,internalSourceRect:options.mouseHoverInternalSourceRect,textureScale:textureScale},"_");this._spriteHover.anchor=Anchors.Fixed;this._spriteHover.color=color}else{this._spriteHover=this._sprite}if(options.mouseDownExternalSourceRect){this._spriteDown=new SlicedSprite({texture:texture,externalSourceRect:options.mouseDownExternalSourceRect,internalSourceRect:options.mouseDownInternalSourceRect,textureScale:textureScale},"_");this._spriteDown.anchor=Anchors.Fixed;this._spriteDown.color=color}else{this._spriteDown=this._spriteHover||this._sprite}}_onMouseReleased(input){super._onMouseReleased(input);if(this.toggleModeEnabled){this.toggle()}}toggle(){if(!this.toggleModeEnabled){throw new Error("Cannot toggle button that's not in toggle mode!")}this.isChecked=!this.isChecked}get forceSelfStateOnChildren(){return true}get requiredOptions(){return[]}get isNaturallyInteractive(){return true}get _defaultCursor(){return Cursors.Pointer}drawImp(pintar){var destRect=this.getBoundingBox();var sprite=this._sprite;if(this.isChecked||this._state.mouseDown)sprite=this._spriteDown;else if(this._state.mouseHover)sprite=this._spriteHover;if(sprite){sprite.offset=destRect.getPosition();sprite.size=destRect.getSize();sprite.draw(pintar)}if(this.text){var paragraph=this._paragraph;if(this._state.mouseDown)paragraph=this._paragraphDown;else if(this._state.mouseHover)paragraph=this._paragraphHover;if(paragraph){paragraph.text=this.text;paragraph.draw(pintar)}}super.drawImp(pintar)}_getValue(){return this.isChecked}}module.exports=Button},{"../anchors":1,"../cursor_types":2,"../pintar":18,"../size_modes":20,"./container":4,"./paragraph":8,"./sliced_sprite":11}],4:[function(require,module,exports){"use strict";const UIElement=require("./ui_element");const PintarJS=require("../pintar");const SidesProperties=require("../sides_properties");class Container extends UIElement{constructor(){super();this._children=[];this.padding=new SidesProperties(0,0,0,0);this.hideExceedingElements=false}addChild(element){if(element.parent){throw new Error("Element to add already have a parent!")}this._children.push(element);element._setParent(this);element._siblingBefore=this._children[this._children.length-2]}removeChild(element){if(element.parent!==this){throw new Error("Element to remove does not belong to this container!")}var index=this._children.indexOf(element);if(index!==-1){this._children.splice(index,1);element._siblingBefore=null;element._setParent(null)}}iterateChildren(callback){for(var i=this._children.length-1;i>=0;--i){var child=this._children[i];if(child)callback(child)}}getInternalBoundingBox(){var ret=this.getBoundingBox();var padding=this.padding?this._convertSides(this.padding):{top:0,bottom:0,left:0,right:0};if(!this.__lastKnownPadding||(this.__lastKnownPadding.left!=padding.left||this.__lastKnownPadding.right!=padding.right||this.__lastKnownPadding.top!=padding.top||this.__lastKnownPadding.bottom!=padding.bottom)){this._bbiVersion++;this.__lastKnownPadding=padding}ret.x+=padding.left;ret.y+=padding.top;ret.width-=padding.right+padding.left;ret.height-=padding.bottom+padding.top;return ret}_onSelfBoundingBoxChange(){super._onSelfBoundingBoxChange();for(var i=0;i<this._children.length;++i){this._children[i]._onParentBoundingBoxChange()}}get forceSelfStateOnChildren(){return false}drawImp(pintar){if(this.hideExceedingElements){var destRect=this.getInternalBoundingBox();var viewport=new PintarJS.Viewport(PintarJS.Point.zero(),destRect);pintar.setViewport(viewport);Container._viewportsQueue.push(viewport);this._updateVisibleRegion(pintar)}for(var i=0;i<this._children.length;++i){this._children[i].draw(pintar)}if(this.hideExceedingElements){Container._viewportsQueue.pop();var prev=Container._viewportsQueue.pop();pintar.setViewport(prev);this._updateVisibleRegion(pintar)}}isVisiblyByViewport(){return true}_updateVisibleRegion(pintar){var viewport=Container._viewportsQueue[Container._viewportsQueue.length-1];UIElement.visibleRegion=viewport?viewport.drawingRegion:pintar.canvasRect}arrangeAllChildAutoAnchors(){var lastElem=null;for(var i=0;i<this._children.length;++i){var child=this._children[i];child._siblingBefore=lastElem;child._setOffsetForAutoAnchors();lastElem=child;if(child.arrangeAllChildAutoAnchors){child.arrangeAllChildAutoAnchors()}}}update(input,forceState){if(!this.visible){return}super.update(input,forceState);var lastElement=null;for(var i=0;i<this._children.length;++i){var element=this._children[i];element._siblingBefore=lastElement;lastElement=element;element.update(input,forceState||(this.forceSelfStateOnChildren?this._state:null))}}}Container._viewportsQueue=[];module.exports=Container},{"../pintar":18,"../sides_properties":19,"./ui_element":14}],5:[function(require,module,exports){"use strict";const UIElement=require("./ui_element");const PintarJS=require("../pintar");const Sprite=require("./sprite");const Anchors=require("../anchors");const Cursors=require("../cursor_types");const SizeModes=require("../size_modes");class Cursor extends UIElement{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);this._textureScale=this.__getFromOptions(options,"textureScale",1);this._texture=this.__getFromOptions(options,"texture");this._sourceRects={};for(var key in Cursors){var cursorType=Cursors[key];var sourceRect=options[Cursors[key]+"SourceRect"];if(sourceRect){this._sourceRects[Cursors[key]]=sourceRect;sourceRect.downState=options[Cursors[key]+"DownSourceRect"]}}this.setCursorType(Cursors.Default)}get requiredOptions(){return["texture","defaultSourceRect"]}_getSourceRect(cursorType){return this._sourceRects[cursorType]||this._sourceRects[Cursors.Default]}setCursorType(cursor){if(this._cursorType!==cursor){var prevOffset=this._sprite?this._sprite.offset:{x:0,y:0};this._sourceRect=this._getSourceRect(cursor);this._sprite=new Sprite({texture:this._texture,sourceRect:this._sourceRect,textureScale:this._textureScale});this._sprite.offset.xMode=this._sprite.offset.yMode=SizeModes.Pixels;this._sprite.offset.set(prevOffset.x,prevOffset.y);this._sprite.anchor=Anchors.Fixed}this._cursorType=cursor}drawImp(pintar){this._sprite.draw(pintar)}update(input,forceState){if(!this.visible){return}super.update(input,forceState);this._sprite.offset=input.mousePosition.clone();if(input.leftMouseDown&&this._sourceRect.downState){this._sprite.sourceRectangle=this._sourceRect.downState}else{this._sprite.sourceRectangle=this._sourceRect}}}module.exports=Cursor},{"../anchors":1,"../cursor_types":2,"../pintar":18,"../size_modes":20,"./sprite":13,"./ui_element":14}],6:[function(require,module,exports){"use strict";const UIElement=require("./ui_element");const PintarJS=require("../pintar");const SizeModes=require("../size_modes");class HorizontalLine extends UIElement{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);this.size.x=100;this.size.xMode=SizeModes.Percents;var textureScale=this.__getFromOptions(options,"textureScale",1);this.size.y=this.__getFromOptions(options,"middleSourceRect").height*textureScale;this.size.yMode=SizeModes.Pixels;var texture=this.__getFromOptions(options,"texture");var leftSideSourceRect=this.__getFromOptions(options,"startEdgeSourceRect");if(leftSideSourceRect){this._leftEdgeSprite=new PintarJS.Sprite(texture);this._leftEdgeSprite.sourceRectangle=leftSideSourceRect;this._leftEdgeSprite.size.set(leftSideSourceRect.width*textureScale,leftSideSourceRect.height*textureScale)}var rightSideSourceRect=this.__getFromOptions(options,"endEdgeSourceRect");if(rightSideSourceRect){this._rightEdgeSprite=new PintarJS.Sprite(texture);this._rightEdgeSprite.sourceRectangle=rightSideSourceRect;this._rightEdgeSprite.size.set(rightSideSourceRect.width*textureScale,rightSideSourceRect.height*textureScale)}this._middleSprite=new PintarJS.Sprite(texture);this._textureScale=this.__getFromOptions(options,"textureScale");this._middleSourceRect=this.__getFromOptions(options,"middleSourceRect")}get requiredOptions(){return["texture","middleSourceRect"]}drawImp(pintar){var destRect=this.getBoundingBox();var widthLeft=destRect.width;var offsetX=0;if(this._leftEdgeSprite){this._leftEdgeSprite.position.set(destRect.x,destRect.y);pintar.drawSprite(this._leftEdgeSprite);widthLeft-=this._leftEdgeSprite.size.x;offsetX+=this._leftEdgeSprite.size.x}if(this._rightEdgeSprite){this._rightEdgeSprite.position.set(destRect.right-this._rightEdgeSprite.width,destRect.y);pintar.drawSprite(this._rightEdgeSprite);widthLeft-=this._rightEdgeSprite.size.x}if(this._middleSprite){this._middleSprite.sourceRectangle=this._middleSourceRect.clone();this._middleSprite.size.set(this._middleSourceRect.width*this._textureScale,this._middleSourceRect.height*this._textureScale);while(widthLeft>0){this._middleSprite.position.set(destRect.x+offsetX,destRect.y);if(this._middleSprite.size.x>widthLeft){var toCut=this._middleSprite.size.x-widthLeft;this._middleSprite.size.x-=toCut;this._middleSprite.sourceRectangle.width-=toCut/this._textureScale}pintar.drawSprite(this._middleSprite);widthLeft-=this._middleSprite.size.x;offsetX+=this._middleSprite.size.x}}}}module.exports=HorizontalLine},{"../pintar":18,"../size_modes":20,"./ui_element":14}],7:[function(require,module,exports){"use strict";const PintarJS=require("../pintar");const Container=require("./container");const SlicedSprite=require("./sliced_sprite");const SidesProperties=require("../sides_properties");const defaultPadding=new SidesProperties(10,10,10,10);class Panel extends Container{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);this.padding=this.__getFromOptions(options,"padding",defaultPadding);this._background=new SlicedSprite(options,"_");this._background._setParent(this);this._background.size.x=this._background.size.y=100;this._background.size.xMode=this._background.size.yMode="%";this._background.ignoreParentPadding=true}get requiredOptions(){return["texture","externalSourceRect","internalSourceRect"]}_onSelfBoundingBoxChange(){super._onSelfBoundingBoxChange();this._background._onParentBoundingBoxChange()}drawImp(pintar){this._background.draw(pintar);super.drawImp(pintar)}update(input,forceState){if(!this.visible){return}super.update(input,forceState);if(this._background){this._background.update(input,forceState)}}}module.exports=Panel},{"../pintar":18,"../sides_properties":19,"./container":4,"./sliced_sprite":11}],8:[function(require,module,exports){"use strict";const UIElement=require("./ui_element");const PintarJS=require("../pintar");const SizeModes=require("../size_modes");class Paragraph extends UIElement{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);this.size.x=100;this.size.xMode=SizeModes.Percents;this.enableLineBreaking=true;this.centerTextVertically=true;this._textSprite=new PintarJS.TextSprite("");this._textSprite.useStyleCommands=Boolean(this.__getFromOptions(options,"useStyleCommands"));if(options.font!==undefined){this._textSprite.font=this.__getFromOptions(options,"font")}if(options.fontSize!==undefined){this._textSprite.fontSize=this.__getFromOptions(options,"fontSize")}if(options.alignment!==undefined){this._textSprite.alignment=this.__getFromOptions(options,"alignment")}if(options.fillColor!==undefined){this._textSprite.color=this.__getFromOptions(options,"fillColor")}if(options.strokeColor!==undefined){this._textSprite.strokeColor=this.__getFromOptions(options,"strokeColor")}if(options.strokeWidth!==undefined){this._textSprite.strokeWidth=this.__getFromOptions(options,"strokeWidth")}this.autoSetHeight=true;this.autoSetWidth=false}get text(){return this._textSprite.text}set text(text){if(this._textSprite.text!==text){this._textSprite.text=text}}get alignment(){return this._textSprite.alignment}set alignment(val){this._textSprite.alignment=val}get requiredOptions(){return[]}drawImp(pintar){if(this.autoSetHeight){this.size.yMode=SizeModes.Pixels;this.size.y=this._textSprite.calculatedHeight}if(this.autoSetWidth){this.size.xMode=SizeModes.Pixels;this.size.x=this._textSprite.calculatedWidth}var destRect=this.getBoundingBox();var position=destRect.getPosition();if(this.centerTextVertically){this._textSprite.lineHeightOffsetFactor=1/1.25}else{this._textSprite.lineHeightOffsetFactor=1/2}this._textSprite.position=position;this._textSprite.maxWidth=this.enableLineBreaking&&!this.autoSetWidth?destRect.width:0;if(this.alignment=="center"){this._textSprite.position.x+=destRect.width/2+1}if(this.alignment=="right"){this._textSprite.position.x+=destRect.width}pintar.drawText(this._textSprite)}_getValue(){return this.text}}module.exports=Paragraph},{"../pintar":18,"../size_modes":20,"./ui_element":14}],9:[function(require,module,exports){"use strict";const Container=require("./container");const PintarJS=require("../pintar");const SlicedSprite=require("./sliced_sprite");const Sprite=require("./sprite");const Anchors=require("../anchors");const SizeModes=require("../size_modes");const Utils=require("../utils");class ProgressBar extends Container{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);if(options.foregroundSourceRect&&(options.foregroundExternalSourceRect||options.foregroundInternalSourceRect)){throw new Error("Option 'foregroundSourceRect' cannot appear with options 'foregroundExternalSourceRect' or 'foregroundInternalSourceRect'!")}if(options.fillSourceRect&&(options.fillInternalSourceRect||options.fillExternalSourceRect)){throw new Error("Option 'fillSourceRect' cannot appear with options 'fillInternalSourceRect' or 'fillExternalSourceRect'!")}if(options.backgroundSourceRect&&(options.backgroundInternalSourceRect||options.backgroundExternalSourceRect)){throw new Error("Option 'backgroundSourceRect' cannot appear with options 'backgroundInternalSourceRect' or 'backgroundExternalSourceRect'!")}this.fillOffset=this.__getFromOptions(options,"fillOffset",PintarJS.Point.zero());var textureScale=this._textureScale=this.__getFromOptions(options,"textureScale",1);var texture=this.__getFromOptions(options,"texture");var backgroundSourceRect=this.__getFromOptions(options,"backgroundSourceRect");if(backgroundSourceRect){this._backgroundSprite=new Sprite({texture:texture,sourceRect:backgroundSourceRect,textureScale:textureScale})}else if(options.backgroundExternalSourceRect){var backgroundExternalSourceRect=this.__getFromOptions(options,"backgroundExternalSourceRect");var backgroundInternalSourceRect=this.__getFromOptions(options,"backgroundInternalSourceRect");this._backgroundSprite=new SlicedSprite({texture:texture,externalSourceRect:backgroundExternalSourceRect,internalSourceRect:backgroundInternalSourceRect,textureScale:textureScale},"_")}else{throw new Error("Progress bars must have a background sprite!")}this._backgroundSprite.color=this.__getFromOptions(options,"backgroundColor",PintarJS.Color.white());this._backgroundSprite.anchor=Anchors.Fixed;var fillSourceRect=this.__getFromOptions(options,"fillSourceRect");if(fillSourceRect){this.spriteFillSourceRect=fillSourceRect;this._fillSprite=new Sprite({texture:texture,sourceRect:fillSourceRect,textureScale:textureScale})}else if(options.fillExternalSourceRect){var fillExternalSourceRect=this.__getFromOptions(options,"fillExternalSourceRect");var fillInternalSourceRect=this.__getFromOptions(options,"fillInternalSourceRect");this._fillSprite=new SlicedSprite({texture:texture,externalSourceRect:fillExternalSourceRect,internalSourceRect:fillInternalSourceRect,textureScale:textureScale},"_")}else{throw new Error("Missing progressbar fill part source rect!")}var fillRect=this.__getFromOptions(options,"fillExternalSourceRect")||this.__getFromOptions(options,"fillSourceRect");var backRect=this.__getFromOptions(options,"backgroundExternalSourceRect")||this.__getFromOptions(options,"backgroundSourceRect");this._fillSprite.color=this.__getFromOptions(options,"fillColor",PintarJS.Color.white());this._fillSprite.anchor=Anchors.Fixed;this._fillWidthToRemove=backRect?Math.round(backRect.width-fillRect.width):0;this._fillHeightToRemove=backRect?Math.round(backRect.height-fillRect.height):0;var foregroundSourceRect=this.__getFromOptions(options,"foregroundSourceRect");if(foregroundSourceRect){this._foregroundSprite=new Sprite({texture:texture,sourceRect:foregroundSourceRect,textureScale:textureScale})}else if(options.foregroundExternalSourceRect){var foregroundExternalSourceRect=this.__getFromOptions(options,"foregroundExternalSourceRect");var foregroundInternalSourceRect=this.__getFromOptions(options,"foregroundInternalSourceRect");this._foregroundSprite=new SlicedSprite({texture:texture,externalSourceRect:foregroundExternalSourceRect,internalSourceRect:foregroundInternalSourceRect,textureScale:textureScale},"_")}if(this._foregroundSprite){this._foregroundSprite.color=this.__getFromOptions(options,"foregroundColor",PintarJS.Color.white());this._foregroundSprite.anchor=Anchors.Fixed}this.fillPartAnchor=this.__getFromOptions(options,"fillAnchor",Anchors.TopLeft);this._setWidth=Boolean(this.__getFromOptions(options,"valueSetWidth",true));this._setHeight=Boolean(this.__getFromOptions(options,"valueSetHeight"));var fillSourceRect=this.__getFromOptions(options,"fillSourceRect");if(fillSourceRect){this.size.y=fillSourceRect.height*textureScale;this.size.x=fillSourceRect.width*textureScale}else{if(this._setWidth&&!this._setHeight){this.size.y=this.__getFromOptions(options,"height")||(backRect||fillRect).height*textureScale;this.size.x=100;this.size.xMode=SizeModes.Percents}else if(this._setHeight&&!this._setWidth){this.size.x=this.__getFromOptions(options,"width")||(backRect||fillRect).width*textureScale;this.size.y=this.__getFromOptions(options,"height")||100}}this.animationSpeed=this.__getFromOptions(options,"animationSpeed",0);this._displayValue=this.value=0}get requiredOptions(){return["texture"]}get fillColor(){return this._fillSprite.color}set fillColor(color){this._fillSprite.color=color}get fillBlendMode(){return this._fillSprite.blendMode}set fillBlendMode(blendMode){this._fillSprite.blendMode=blendMode}matchDisplayToValue(){this._displayValue=this.value}setFromValueAndMax(value,max){if(max<=0||value<=0){this.value=0;return}this.value=Math.min(value/max,1)}drawImp(pintar){var dest=this.getBoundingBox();this._backgroundSprite.offset=dest.getPosition();this._backgroundSprite.size=dest.getSize();this._backgroundSprite.draw(pintar);var value=this._displayValue;if(value>0){if(this.spriteFillSourceRect){this._fillSprite.sourceRectangle=this.spriteFillSourceRect.clone();if(this._setWidth){this._fillSprite.sourceRectangle.width=Math.floor((this._backgroundSprite.sourceRectangle.width-this._fillWidthToRemove)*value);this._fillSprite.size.x=this._fillSprite.sourceRectangle.width*this._textureScale;if(this.fillPartAnchor.indexOf("right")!==-1){this._fillSprite.sourceRectangle.x=Math.floor(this.spriteFillSourceRect.right-this._fillSprite.sourceRectangle.width)}}if(this._setHeight){this._fillSprite.sourceRectangle.height=Math.floor((this._backgroundSprite.sourceRectangle.height-this._fillHeightToRemove)*value);this._fillSprite.size.y=this._fillSprite.sourceRectangle.height*this._textureScale;if(this.fillPartAnchor.indexOf("Bottom")!==-1){this._fillSprite.sourceRectangle.y=Math.floor(this.spriteFillSourceRect.bottom-this._fillSprite.sourceRectangle.height)}}this._fillSprite.offset=this.getDestTopLeftPositionForRect(dest,this._fillSprite.size,this.fillPartAnchor,this.fillOffset)}else{this._fillSprite.size.x=Math.floor((this._backgroundSprite.size.x-this._fillWidthToRemove*this._textureScale)*(this._setWidth?value:1));this._fillSprite.size.y=Math.floor((this._backgroundSprite.size.y-this._fillHeightToRemove*this._textureScale)*(this._setHeight?value:1));this._fillSprite.offset=this.getDestTopLeftPositionForRect(dest,this._fillSprite.size,this.fillPartAnchor,this.fillOffset)}this._fillSprite.draw(pintar)}if(this._foregroundSprite){this._foregroundSprite.offset=dest.getPosition();this._foregroundSprite.size=dest.getSize();this._foregroundSprite.draw(pintar)}super.drawImp(pintar)}get displayedValue(){return this._displayValue}_getValue(){return this.value}update(input,forceState){if(!this.visible){return}super.update(input,forceState);if(this._displayValue!=this.value){if(!this.animationSpeed){this._displayValue=this.value}else{this._displayValue=Utils.MoveTowards(this._displayValue,this.value,input.deltaTime*this.animationSpeed)}}if(this._displayValue<0)this._displayValue=0;if(this._displayValue>1)this._displayValue=1}}module.exports=ProgressBar},{"../anchors":1,"../pintar":18,"../size_modes":20,"../utils":22,"./container":4,"./sliced_sprite":11,"./sprite":13}],10:[function(require,module,exports){"use strict";const Container=require("./container");const PintarJS=require("../pintar");const InputManager=require("../input/input_manager");const Cursor=require("./cursor");class UIRoot extends Container{constructor(pintar,inputManager){super({UIRoot:{default:{}}});this.pintar=pintar;this.inputManager=inputManager||new InputManager(pintar);this.size=null;this.offset=null;this.padding.set(0,0,0,0);this.margin.set(0,0,0,0)}getRoot(){return this}cleanup(){this.inputManager.cleanup()}setCursor(cursor){if(cursor.constructor!==Cursor){throw new Error("Cursor must be a 'Cursor' element instance!")}cursor._setParent(this);this._cursor=cursor}getBoundingBox(){return this.pintar.canvasRect}getInternalBoundingBox(){return this.pintar.canvasRect}getSizeInPixels(){var rect=this.pintar.canvasRect;return new PintarJS.Point(rect.width,rect.height)}getOffsetInPixels(){return new PintarJS.Point(0,0)}draw(){if(!this.visible){return}this.checkIfSelfBoundingBoxShouldUpdate();super.draw(this.pintar);if(this._cursor){this._cursor.draw(this.pintar)}}update(input){if(!this.visible){return}this.inputManager.startUpdate();super.update(this.inputManager);this.inputManager.endUpdate();if(this._cursor){this._cursor.update(this.inputManager);this._cursor.setCursorType(this.inputManager.cursorType)}}checkIfSelfBoundingBoxShouldUpdate(){if(this.__lastCanvasRect&&!this.__lastCanvasRect.equals(this.pintar.canvasRect)){this._onSelfBoundingBoxChange()}this.__lastCanvasRect=this.pintar.canvasRect.clone()}}module.exports=UIRoot},{"../input/input_manager":17,"../pintar":18,"./container":4,"./cursor":5}],11:[function(require,module,exports){"use strict";const PintarJS=require("../pintar");const UIElement=require("./ui_element");class SlicedSprite extends UIElement{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);var texture=this.__getFromOptions(options,"texture");var textureScale=this.__getFromOptions(options,"textureScale",1);var wholeSourceRect=this._externalSourceRect=this.__getFromOptions(options,"externalSourceRect");var fillSourceRect=this._internalSourceRect=this.__getFromOptions(options,"internalSourceRect");var fillMode=this.__getFromOptions(options,"fillMode",SlicedSprite.FillModes.Tiled);this._leftFrameSourceRect=new PintarJS.Rectangle(wholeSourceRect.x,fillSourceRect.y,fillSourceRect.x-wholeSourceRect.x,fillSourceRect.height);this._rightFrameSourceRect=new PintarJS.Rectangle(fillSourceRect.right,fillSourceRect.y,wholeSourceRect.right-fillSourceRect.right,fillSourceRect.height);this._topFrameSourceRect=new PintarJS.Rectangle(fillSourceRect.x,wholeSourceRect.y,fillSourceRect.width,fillSourceRect.y-wholeSourceRect.y);this._bottomFrameSourceRect=new PintarJS.Rectangle(fillSourceRect.x,fillSourceRect.bottom,fillSourceRect.width,wholeSourceRect.bottom-fillSourceRect.bottom);this._topLeftFrameCornerSourceRect=new PintarJS.Rectangle(wholeSourceRect.x,wholeSourceRect.y,fillSourceRect.x-wholeSourceRect.x,fillSourceRect.y-wholeSourceRect.y);this._topRightFrameCornerSourceRect=new PintarJS.Rectangle(fillSourceRect.right,wholeSourceRect.y,wholeSourceRect.right-fillSourceRect.right,fillSourceRect.y-wholeSourceRect.y);this._bottomLeftFrameCornerSourceRect=new PintarJS.Rectangle(wholeSourceRect.x,fillSourceRect.bottom,fillSourceRect.x-wholeSourceRect.x,wholeSourceRect.bottom-fillSourceRect.bottom);this._bottomRightFrameCornerSourceRect=new PintarJS.Rectangle(fillSourceRect.right,fillSourceRect.bottom,wholeSourceRect.right-fillSourceRect.right,wholeSourceRect.bottom-fillSourceRect.bottom);this._topFrameSprite=new PintarJS.Sprite(texture);this._bottomFrameSprite=new PintarJS.Sprite(texture);this._leftFrameSprite=new PintarJS.Sprite(texture);this._rightFrameSprite=new PintarJS.Sprite(texture);this._topLeftCornerFrameSprite=new PintarJS.Sprite(texture);this._bottomLeftCornerFrameSprite=new PintarJS.Sprite(texture);this._topRightCornerFrameSprite=new PintarJS.Sprite(texture);this._bottomRightCornerFrameSprite=new PintarJS.Sprite(texture);this._fillSprite=new PintarJS.Sprite(texture);this.fillColor=this.__getFromOptions(options,"fillColor",PintarJS.Color.white());this.frameColor=this.__getFromOptions(options,"frameColor",PintarJS.Color.white());this.frameScale=textureScale;this.fillScale=textureScale;this.blendMode=PintarJS.BlendModes.AlphaBlend;this.fillMode=fillMode||SlicedSprite.FillModes.Tiled}get requiredOptions(){return["texture","externalSourceRect","internalSourceRect"]}get sourceRectangle(){return this._externalSourceRect}set color(color){this.fillColor=color.clone();this.frameColor=color.clone()}drawImp(pintar){var destRect=this.getBoundingBox();var scaleFactor=this.absoluteScale;var frameScale=scaleFactor*this.frameScale;var position=destRect.getPosition();destRect.width-=this._bottomRightFrameCornerSourceRect.width*frameScale;destRect.height-=this._bottomRightFrameCornerSourceRect.height*frameScale;if(destRect.width>0&&destRect.height>0){var drawTopAndBottomFrames=(sprite,sourceRect,extraY)=>{if(sourceRect.width==0||sourceRect.height==0){return}sprite.sourceRectangle=sourceRect.clone();sprite.origin=PintarJS.Point.zero();sprite.position=position.clone();sprite.blendMode=this.blendMode;sprite.position.y+=extraY;sprite.position.x+=this._topLeftFrameCornerSourceRect.width*frameScale;sprite.width=sprite.sourceRectangle.width*frameScale;sprite.height=sprite.sourceRectangle.height*frameScale;sprite.color=this.frameColor;var exceededRightSide=false;while(!exceededRightSide){var spriteRight=sprite.position.x+sprite.width;exceededRightSide=spriteRight>=destRect.right;if(exceededRightSide){var toCut=spriteRight-destRect.right;if(toCut>0){sprite.sourceRectangle.width-=Math.floor(toCut*(sprite.sourceRectangle.width/sprite.width));sprite.width-=toCut}}pintar.drawSprite(sprite);sprite.position.x+=sprite.width}};drawTopAndBottomFrames(this._topFrameSprite,this._topFrameSourceRect,0);drawTopAndBottomFrames(this._bottomFrameSprite,this._bottomFrameSourceRect,destRect.height);var drawLeftAndRightFrames=(sprite,sourceRect,extraX)=>{if(sourceRect.width==0||sourceRect.height==0){return}sprite.sourceRectangle=sourceRect.clone();sprite.origin=PintarJS.Point.zero();sprite.position=position.clone();sprite.blendMode=this.blendMode;sprite.position.x+=extraX;sprite.position.y+=this._topLeftFrameCornerSourceRect.height*frameScale;sprite.width=sprite.sourceRectangle.width*frameScale;sprite.height=sprite.sourceRectangle.height*frameScale;sprite.color=this.frameColor;var exceededBottomSide=false;while(!exceededBottomSide){var spriteBottom=sprite.position.y+sprite.height;exceededBottomSide=spriteBottom>=destRect.bottom;if(exceededBottomSide){var toCut=spriteBottom-destRect.bottom;if(toCut>0){sprite.sourceRectangle.height-=Math.floor(toCut*(sprite.sourceRectangle.height/sprite.height));sprite.height-=toCut}}pintar.drawSprite(sprite);sprite.position.y+=sprite.height}};drawLeftAndRightFrames(this._leftFrameSprite,this._leftFrameSourceRect,0);drawLeftAndRightFrames(this._rightFrameSprite,this._rightFrameSourceRect,destRect.width);var drawFramesCorner=(sprite,sourceRect,posx,posy)=>{if(sourceRect.width==0||sourceRect.height==0){return}sprite.sourceRectangle=sourceRect.clone();sprite.origin=PintarJS.Point.zero();sprite.position=position.clone();sprite.blendMode=this.blendMode;sprite.position.x+=posx;sprite.position.y+=posy;sprite.width=sprite.sourceRectangle.width*frameScale;sprite.height=sprite.sourceRectangle.height*frameScale;sprite.color=this.frameColor;pintar.drawSprite(sprite)};drawFramesCorner(this._topLeftCornerFrameSprite,this._topLeftFrameCornerSourceRect,0,0);drawFramesCorner(this._topRightCornerFrameSprite,this._topRightFrameCornerSourceRect,destRect.width,0);drawFramesCorner(this._bottomLeftCornerFrameSprite,this._bottomLeftFrameCornerSourceRect,0,destRect.height);drawFramesCorner(this._bottomRightCornerFrameSprite,this._bottomRightFrameCornerSourceRect,destRect.width,destRect.height)}if(this._internalSourceRect.width&&this._internalSourceRect.height){var sprite=this._fillSprite;sprite.origin=PintarJS.Point.zero();sprite.position=position.clone();sprite.blendMode=this.blendMode;sprite.position.x+=this._topLeftCornerFrameSprite.width;sprite.position.y+=this._topLeftCornerFrameSprite.height;sprite.width=destRect.width-this._bottomLeftCornerFrameSprite.width;sprite.height=destRect.height-this._bottomLeftCornerFrameSprite.height;sprite.color=this.fillColor;if(this.fillMode===SlicedSprite.FillModes.Stretch){sprite.sourceRectangle=this._internalSourceRect.clone();pintar.drawSprite(sprite)}else if(this.fillMode===SlicedSprite.FillModes.Tiled){var fillScale=scaleFactor*this.fillScale;var fillSize=new PintarJS.Point(Math.max(this._internalSourceRect.width*fillScale,1),Math.max(this._internalSourceRect.height*fillScale,1));sprite.size=fillSize.clone();var startPosition=sprite.position.clone();for(var i=0;i<destRect.width/fillSize.x;++i){sprite.sourceRectangle=this._internalSourceRect.clone();sprite.size.x=fillSize.x;sprite.position.x=startPosition.x+sprite.width*i;if(sprite.position.x>=this._rightFrameSprite.position.x){break}var spriteRight=sprite.position.x+sprite.size.x;if(spriteRight>this._rightFrameSprite.position.x){var toCut=spriteRight-this._rightFrameSprite.position.x;if(toCut>0){sprite.sourceRectangle.width-=Math.floor(toCut*(sprite.sourceRectangle.width/sprite.width));sprite.width-=toCut}}if(sprite.width==0){break}for(var j=0;j<destRect.height/fillSize.y;++j){sprite.size.y=fillSize.y;sprite.position.y=startPosition.y+sprite.height*j;if(sprite.position.y>=this._bottomFrameSprite.position.y){break}var spriteBottom=sprite.position.y+sprite.size.y;if(spriteBottom>this._bottomFrameSprite.position.y){var toCut=spriteBottom-this._bottomFrameSprite.position.y;if(toCut>0){sprite.sourceRectangle.height-=Math.floor(toCut*(sprite.sourceRectangle.height/sprite.height));sprite.height-=toCut}}if(sprite.height==0){break}pintar.drawSprite(sprite)}}}else if(this.fillMode===SlicedSprite.FillModes.None){}else{throw new Error("Invalid fill mode!")}}}}SlicedSprite.FillModes={Tiled:1,Stretch:2,None:3};module.exports=SlicedSprite},{"../pintar":18,"./ui_element":14}],12:[function(require,module,exports){"use strict";const Container=require("./container");const PintarJS=require("../pintar");const SizeModes=require("../size_modes");const HorizontalLine=require("./horizontal_line");const VerticalLine=require("./vertical_line");const Cursors=require("../cursor_types");class Slider extends Container{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);var textureScale=this.__getFromOptions(options,"textureScale",1);this._direction=this.__getFromOptions(options,"direction","horizontal");this._min=0;this._max=100;this._roundValues=true;this._line=new{horizontal:HorizontalLine,vertical:VerticalLine}[this._direction](options,"_");this._line._setParent(this);this._line.size.x=100;this._line.size.xMode="%";this._line.size.y=100;this._line.size.yMode="%";this._line.ignoreParentPadding=true;this._line.margin.set(0,0,0,0);var middleSourceRect=this.__getFromOptions(options,"middleSourceRect");if(this._direction==="horizontal"){this.size.x=100;this.size.xMode=SizeModes.Percents;this.size.y=middleSourceRect.height*textureScale;this.size.yMode=SizeModes.Pixels}else{this.size.y=100;this.size.yMode=SizeModes.Percents;this.size.x=middleSourceRect.width*textureScale;this.size.xMode=SizeModes.Pixels}var startOffset=this.__getFromOptions(options,"startEdgeSourceRect");this._startOffset=startOffset?new PintarJS.Point(startOffset.width*textureScale,startOffset.height*textureScale):new PintarJS.Point(0,0);var endEdgeSourceRect=this.__getFromOptions(options,"endEdgeSourceRect");this._endOffset=endEdgeSourceRect?new PintarJS.Point(endEdgeSourceRect.width*textureScale,endEdgeSourceRect.height*textureScale):new PintarJS.Point(0,0);this._handle=new PintarJS.Sprite(this.__getFromOptions(options,"texture"));this._handle.sourceRectangle=this.__getFromOptions(options,"handleSourceRect");this._handle.size.set(this._handle.sourceRectangle.width*textureScale,this._handle.sourceRectangle.height*textureScale);this._handleOffset=this.__getFromOptions(options,"handleOffset",PintarJS.Point.zero());this.value=50}get requiredOptions(){return["texture","middleSourceRect","handleSourceRect"]}get min(){return this._min}set min(val){this._min=val;this.value=this.value}get max(){return this._max}set max(val){this._max=val;this.value=this.value}get roundValue(){return this._roundValues}set roundValue(val){this._roundValues=Boolean(val);this.value=this.value}get value(){return this._value}set value(val){this._value=this._clampValue(val)}_clampValue(val){if(this._roundValues){val=Math.round(val)}if(val<this.min){val=this.min}if(val>this.max){val=this.max}return val}get isNaturallyInteractive(){return true}get _defaultCursor(){return Cursors.Pointer}getValuePercent(){if(this.min==this.max){return 0}var val=this.value-this.min;return val/(this.max-this.min)}setValueFromPercent(val){if(val<0)val=0;if(val>1)val=1;this.value=this.min+(this.max-this.min)*val}drawImp(pintar){var destRect=this.getBoundingBox();this._line.draw(pintar);this._handle.position=destRect.getPosition().add(this._handleOffset).round();if(this._direction==="horizontal"){var maxWidth=destRect.width-this._startOffset.x-this._endOffset.x;this._handle.position.x+=this._startOffset.x+maxWidth*this.getValuePercent()-this._handle.size.x/2}else{var maxHeight=destRect.height-this._startOffset.y-this._endOffset.y;this._handle.position.y+=this._startOffset.y+maxHeight*this.getValuePercent()-this._handle.size.y/2}pintar.drawSprite(this._handle);super.drawImp(pintar)}update(input,forceStatus){if(!this.visible){return}super.update(input,forceStatus);if(this._state.mouseStartPressOnSelf&&this._state.mouseDown){var destRect=this.getBoundingBox();if(this._direction==="horizontal"){var maxWidth=destRect.width-this._startOffset.x-this._endOffset.x;var relativePos=input.mousePosition.x-destRect.x-this._startOffset.x;this.setValueFromPercent(relativePos/maxWidth)}else{var maxHeight=destRect.height-this._startOffset.y-this._endOffset.y;var relativePos=input.mousePosition.y-destRect.y-this._startOffset.y;this.setValueFromPercent(relativePos/maxHeight)}}}_getValue(){return this.value}}module.exports=Slider},{"../cursor_types":2,"../pintar":18,"../size_modes":20,"./container":4,"./horizontal_line":6,"./vertical_line":15}],13:[function(require,module,exports){"use strict";const PintarJS=require("../pintar");const UIElement=require("./ui_element");class Sprite extends UIElement{constructor(options,skin,override){super();if(skin){options=this.getOptionsFromTheme(options,skin,override);this.setBaseOptions(options)}var texture=this.__getFromOptions(options,"texture");var textureScale=this.__getFromOptions(options,"textureScale",1);var sourceRect=this.__getFromOptions(options,"sourceRect");if(options.textureScale&&!sourceRect){throw new Error("When providing 'textureScale' option for UI Sprite you must also provide the sourceRect option!")}this._sprite=new PintarJS.Sprite(texture);if(sourceRect){this._sprite.sourceRectangle=sourceRect;this.size.x=sourceRect.width*textureScale;this.size.y=sourceRect.height*textureScale}}set texture(val){this._sprite.texture=val}get texture(){return this._sprite.texture}get requiredOptions(){return["texture"]}get color(){return this._sprite.color}set color(val){this._sprite.color=val}get sourceRectangle(){return this._sprite.sourceRectangle}set sourceRectangle(val){this._sprite.sourceRectangle=val}drawImp(pintar){var destRect=this.getBoundingBox();this._sprite.size.set(destRect.width,destRect.height);this._sprite.position.set(destRect.x,destRect.y);pintar.drawSprite(this._sprite)}}module.exports=Sprite},{"../pintar":18,"./ui_element":14}],14:[function(require,module,exports){"use strict";const PintarJS=require("../pintar");const Anchors=require("../anchors");const SizeModes=require("../size_modes");const Sides=require("../sides_properties");const UIPoint=require("../ui_point");const Cursors=require("../cursor_types");class UIElementState{constructor(){this.mouseHover=false;this.mouseDown=false;this.mouseStartPressOnSelf=false}clone(){var ret=new UIElementState;ret.mouseHover=this.mouseHover;ret.mouseDown=this.mouseDown;ret.mouseStartPressOnSelf=this.mouseStartPressOnSelf;return ret}}class UIElement{constructor(){this.offset=UIPoint.zero();this.size=new UIPoint(100,"px",100,"px");this.anchor=Anchors.Auto;this.scale=1;this.margin=new Sides(5,5,5,5);this.ignoreParentPadding=false;this.cursor=this._defaultCursor;this._state=new UIElementState;this._prevState=new UIElementState;this.__parent=null;this.fixedPosition=false;this.interactive=this.isNaturallyInteractive;this.onMouseEnter=null;this.onMouseLeave=null;this.whileMouseHover=null;this.onMousePressed=null;this.onMouseReleased=null;this.whileMouseDown=null;this.afterValueChanged=null;this.beforeUpdate=null;this._selfBoundingBoxCache=null;this._parentBoundingBoxCache=null;this._parentInternalBoundingBoxCache=null;this._boundingBoxVersion=0;this.visible=true;this._siblingBefore=null;this._autoOffset=null}get fixedPosition(){return this._fixedPosition}set fixedPosition(value){value=Boolean(value);if(this._fixedPosition!==value){this._fixedPosition=value;if(this.__parent){this._onParentBoundingBoxChange()}}}_copyStateFrom(other){this.__copyStateFrom=other}setBaseOptions(options){this.scale=this.__getFromOptions(options,"scale",this.scale);this.margin=this.__getFromOptions(options,"margin",this.margin);this.anchor=this.__getFromOptions(options,"anchor",this.anchor);this.cursor=this.__getFromOptions(options,"cursor",this.cursor)}get _defaultCursor(){return Cursors.Default}get elementTypeName(){return this.constructor.name}getOptionsFromTheme(theme,skin,override){if(skin==="_"){return theme}var elementName=this.elementTypeName;var options=theme[elementName];if(!options){throw new Error("Missing definition for object type '"+elementName+"' in UI theme!")}skin=skin||"default";options=options[skin];if(!options){throw new Error("Missing definition for object type '"+elementName+"' and skin '"+skin+"' in UI theme!")}if(override){var temp={};for(var key in options){temp[key]=options[key]}for(var key in override){temp[key]=override[key]}options=temp}if(options.extends){var temp={};var base=theme[elementName][options.extends];for(var key in base){temp[key]=base[key]}for(var key in options){temp[key]=options[key]}options=temp}var required=this.requiredOptions;for(var i=0;i<required.length;++i){if(!(required[i]in options)){throw new Error("Missing mandatory option '"+required[i]+"' in element type '"+elementName+"' options!")}}return options}get requiredOptions(){return[]}_setParent(parent){this._lastParentBoundingBoxVersion=-1;this._cachedTopLeftPos=null;this._autoOffset=this._siblingBefore=null;this._onParentBoundingBoxChange();this.__parent=parent;this._root=null}getRoot(){if(!this._root){this._root=this.__parent.getRoot()}return this._root}__getFromOptions(options,key,defaultVal){var val=options[key];if(val===undefined)val=defaultVal;if(val&&val.clone){val=val.clone()}return val}get absoluteScale(){return this.scale*UIElement.globalScale}_convertVal(val,parentSize,mode){switch(mode){case undefined:case SizeModes.Pixels:var scale=this.absoluteScale;return Math.ceil(val*scale);case SizeModes.Percents:return Math.ceil(val/100*parentSize);default:throw new Error("Invalid size mode!")}}_convertSize(val){var parentSize=val.xMode==SizeModes.Percents||val.yMode==SizeModes.Percents?this.getParentInternalBoundingBox().getSize():{x:0,y:0};return new PintarJS.Point(this._convertVal(val.x,parentSize.x,val.xMode),this._convertVal(val.y,parentSize.y,val.yMode))}_convertSides(val){var ret=val.clone();var parentSize=ret.leftMode==SizeModes.Percents||ret.rightMode==SizeModes.Percents||ret.topMode==SizeModes.Percents||ret.bottomMode==SizeModes.Percents?this.getParentInternalBoundingBox().getSize():{x:0,y:0};ret.left=this._convertVal(ret.left,parentSize.x,ret.leftMode);ret.right=this._convertVal(ret.right,parentSize.x,ret.rightMode);ret.top=this._convertVal(ret.top,parentSize.y,ret.topMode);ret.bottom=this._convertVal(ret.bottom,parentSize.y,ret.bottomMode);return ret}getSizeInPixels(){return this._convertSize(this.size)}getOffsetInPixels(){return this._convertSize(this.offset)}get parent(){return this.__parent}get isNaturallyInteractive(){return false}draw(pintar){if(!this.visible){return}this.checkIfParentBoundingBoxWasUpdated();this.checkIfSelfBoundingBoxShouldUpdate();if(this.isVisiblyByViewport()){this.drawImp(pintar)}}drawImp(pintar){}_triggerEvents(input){if(!this._prevState.mouseHover&&this._state.mouseHover){this._onMouseEnter(input)}if(this._prevState.mouseHover&&!this._state.mouseHover){this._onMouseLeave(input)}if(this._state.mouseHover){this._whileMouseHover(input)}if(!this._prevState.mouseDown&&this._state.mouseDown){this._onMousePressed(input)}if(this._prevState.mouseDown&&!this._state.mouseDown&&this._state.mouseHover){this._onMouseReleased(input)}if(this._state.mouseDown){this._whileMouseDown(input)}var newVal=this._getValue();if(newVal!==this._prevVal){this._afterValueChanged(input);this._prevVal=newVal}this._prevState=this._state.clone()}_onMouseEnter(input){if(this.onMouseEnter){this.onMouseEnter(this,input)}}_onMouseLeave(input){if(this.onMouseLeave){this.onMouseLeave(this,input)}}_whileMouseHover(input){if(this.whileMouseHover){this.whileMouseHover(this,input)}}_onMousePressed(input){if(this.onMousePressed){this.onMousePressed(this,input)}}_onMouseReleased(input){if(this.onMouseReleased){this.onMouseReleased(this,input)}}_whileMouseDown(input){if(this.whileMouseDown){this.whileMouseDown(this,input)}}_afterValueChanged(input){if(this.afterValueChanged){this.afterValueChanged(this,input)}}_getValue(){return undefined}_setOffsetForAutoAnchors(){if(this.anchor.indexOf("Auto")!==0||this.__parent==null){this._autoOffset=null;return}var parentIBB=this.getParentInternalBoundingBox();var selfMargin=this._convertSides(this.margin);var lastElement=this._siblingBefore;var lastElementMargin=lastElement?lastElement._convertSides(lastElement.margin):new Sides(0,0,0,0);var lastElementBB=lastElement?lastElement.getBoundingBox():new PintarJS.Rectangle;var needBreakLine=false;if(this.anchor===Anchors.AutoInline||this.anchor===Anchors.AutoInlineNoBreak){if(lastElement){var marginX=Math.max(selfMargin.left,lastElementMargin.right);this._autoOffset=new PintarJS.Point(lastElementBB.right-parentIBB.left+marginX,lastElementBB.top-parentIBB.top);if(this.anchor===Anchors.AutoInline&&this.getBoundingBox().right>=parentIBB.right){needBreakLine=true}}else{this._autoOffset=new PintarJS.Point(selfMargin.left,selfMargin.top)}}if(needBreakLine||this.anchor===Anchors.Auto){if(lastElement){var marginY=Math.max(selfMargin.top,lastElementMargin.bottom);var marginX=Math.max(selfMargin.left,0);this._autoOffset=new PintarJS.Point(marginX,lastElementBB.bottom-parentIBB.top+marginY)}else{this._autoOffset=new PintarJS.Point(selfMargin.left,selfMargin.top)}}}update(input,forceState){if(!this.visible){return}if(this.beforeUpdate){this.beforeUpdate(this,input)}this.checkIfSelfBoundingBoxShouldUpdate();this._setOffsetForAutoAnchors();if(!this.interactive){return}if(this.__copyStateFrom||forceState){this._state=forceState?forceState.clone():this.__copyStateFrom._state.clone();this._triggerEvents(input);return}var dest=this.getBoundingBox();var mousePos=input.mousePosition;this._state.mouseHover=mousePos.x>=dest.left&&mousePos.x<=dest.right&&mousePos.y>=dest.top&&mousePos.y<=dest.bottom;if(this._state.mouseHover){input.setCursor(this.cursor)}this._state.mouseDown=this._state.mouseHover&&input.leftMouseDown;if(this._state.mouseDown&&!input.leftMousePrevDown){this._state.mouseStartPressOnSelf=true}if(!input.leftMouseDown&&!input.isMouseOutside){this._state.mouseStartPressOnSelf=false}this._triggerEvents(input)}getBoundingBox(){if(this._selfBoundingBoxCache){return this._selfBoundingBoxCache.clone()}var position=this.getDestTopLeftPosition();var size=this.getSizeInPixels();this._selfBoundingBoxCache=new PintarJS.Rectangle(position.x,position.y,size.x,size.y);this._boundingBoxVersion++;return this._selfBoundingBoxCache.clone()}getInternalBoundingBox(){if(this._selfInternalBoundingBoxCache){return this._selfInternalBoundingBoxCache.clone()}this._selfInternalBoundingBoxCache=this.getBoundingBox();return this._selfInternalBoundingBoxCache.clone()}getVisibleRegion(){return UIElement.visibleRegion}isVisiblyByViewport(){var visibleRegion=UIElement.visibleRegion;if(visibleRegion){var dest=this.getBoundingBox();if(dest.bottom<visibleRegion.top||dest.top>visibleRegion.bottom||dest.right<visibleRegion.left||dest.left>visibleRegion.right){return false}}return true}getParentInternalBoundingBox(){var parent=this.parent;if(!parent){throw new Error("Missing parent element! Did you forget to create a UI root and add elements to it?")}if(this.fixedPosition){return this.getRoot().getBoundingBox()}if(this.ignoreParentPadding){if(!this._parentBoundingBoxCache){this._parentBoundingBoxCache=this.parent.getBoundingBox()}return this._parentBoundingBoxCache}else{if(!this._parentInternalBoundingBoxCache){this._parentInternalBoundingBoxCache=this.parent.getInternalBoundingBox()}return this._parentInternalBoundingBoxCache}}getDestTopLeftPositionForRect(parentRect,selfSize,anchor,offset){var ret=new PintarJS.Point(0,0);var offsetFactor=new PintarJS.Point(1,1);switch(anchor){case Anchors.TopLeft:case Anchors.Auto:case Anchors.AutoInline:case Anchors.AutoInlineNoBreak:ret.set(parentRect.x,parentRect.y);break;case Anchors.TopCenter:ret.set(parentRect.x+parentRect.width/2-selfSize.x/2,parentRect.y);break;case Anchors.TopRight:ret.set(parentRect.right-selfSize.x,parentRect.y);offsetFactor.x=-1;break;case Anchors.CenterLeft:ret.x=parentRect.x;ret.y=parentRect.y+parentRect.height/2-selfSize.y/2;break;case Anchors.Center:ret.x=parentRect.x+parentRect.width/2-selfSize.x/2;ret.y=parentRect.y+parentRect.height/2-selfSize.y/2;break;case Anchors.CenterRight:ret.x=parentRect.right-selfSize.x;ret.y=parentRect.y+parentRect.height/2-selfSize.y/2;offsetFactor.x=-1;break;case Anchors.BottomLeft:ret.x=parentRect.x;ret.y=parentRect.bottom-selfSize.y;offsetFactor.y=-1;break;case Anchors.BottomCenter:ret.x=parentRect.x+parentRect.width/2-selfSize.x/2;ret.y=parentRect.bottom-selfSize.y;offsetFactor.y=-1;break;case Anchors.BottomRight:ret.x=parentRect.right-selfSize.x;ret.y=parentRect.bottom-selfSize.y;offsetFactor.x=-1;offsetFactor.y=-1;break}if(offset){ret=ret.add(offset.mul(offsetFactor))}ret.x=Math.floor(ret.x);ret.y=Math.floor(ret.y);if(anchor.indexOf("Auto")===0&&this._autoOffset){ret=ret.add(this._autoOffset)}return ret}getDestTopLeftPosition(){if(this.anchor===Anchors.Fixed){return this.offset.clone()}if(this._cachedTopLeftPos){return this._cachedTopLeftPos.clone()}var parentRect=this.getParentInternalBoundingBox();var selfSize=this.getSizeInPixels();var offset=this.getOffsetInPixels();this._setOffsetForAutoAnchors();var ret=this.getDestTopLeftPositionForRect(parentRect,selfSize,this.anchor,offset);this._boundingBoxVersion++;this._cachedTopLeftPos=ret.clone();return ret}checkIfParentBoundingBoxWasUpdated(){if(this.__parent&&this._lastParentBoundingBoxVersion!=this.__parent._boundingBoxVersion){this._onParentBoundingBoxChange()}}checkIfSelfBoundingBoxShouldUpdate(){var autoOffset=this._autoOffset||PintarJS.Point.zero();if(this.__lastAnchor!==this.anchor||(!this.__lastSize||!this.__lastSize.equals(this.size))||(!this.__lastOffset||!this.__lastOffset.equals(this.offset))||(!this.__lastMargin||!this.__lastMargin.equals(this.margin))||(!this.__lastAutoOffset||!this.__lastAutoOffset.equals(autoOffset))||this.__lastScale!==this.scale||this.__lastIgnoreParentPadding!==this.ignoreParentPadding||this.padding&&(!this.__lastPadding||!this.__lastPadding.equals(this.padding))){this._onSelfBoundingBoxChange();this.__lastAnchor=this.anchor;this.__lastSize=this.size.clone();this.__lastOffset=this.offset.clone();this.__lastMargin=this.margin.clone();this.__lastAutoOffset=autoOffset.clone();this.__lastPadding=this.padding?this.padding.clone():null;this.__lastIgnoreParentPadding=this.ignoreParentPadding;this.__lastScale=this.scale}}_onSelfBoundingBoxChange(){this._autoOffset=null;this._cachedTopLeftPos=null;this._selfBoundingBoxCache=null;this._selfInternalBoundingBoxCache=null}_onParentBoundingBoxChange(){this._onSelfBoundingBoxChange();this._parentBoundingBoxCache=null;this._parentInternalBoundingBoxCache=null;if(this.__parent){this._lastParentBoundingBoxVersion=this.__parent._boundingBoxVersion}}getCenterPosition(){var bb=this.getBoundingBox();return bb.getCenter()}}UIElement.globalScale=1;module.exports=UIElement},{"../anchors":1,"../cursor_types":2,"../pintar":18,"../sides_properties":19,"../size_modes":20,"../ui_point":21}],15:[function(require,module,exports){"use strict";const UIElement=require("./ui_element");const PintarJS=require("../pintar");const SizeModes=require("../size_modes");class VerticalLine extends UIElement{constructor(theme,skin,override){super();var options=this.getOptionsFromTheme(theme,skin,override);this.setBaseOptions(options);var textureScale=this.__getFromOptions(options,"textureScale",1);var middleSourceRect=this.__getFromOptions(options,"middleSourceRect");this.size.x=middleSourceRect.width*textureScale;this.size.xMode=SizeModes.Pixels;this.size.y=middleSourceRect.height*textureScale*2;this.size.yMode=SizeModes.Pixels;var texture=this.__getFromOptions(options,"texture");var topSideSourceRect=this.__getFromOptions(options,"startEdgeSourceRect");if(topSideSourceRect){this._topEdgeSprite=new PintarJS.Sprite(texture);this._topEdgeSprite.sourceRectangle=topSideSourceRect;this._topEdgeSprite.size.set(topSideSourceRect.width*textureScale,topSideSourceRect.height*textureScale)}var bottomSideSourceRect=this.__getFromOptions(options,"endEdgeSourceRect");if(bottomSideSourceRect){this._bottomEdgeSprite=new PintarJS.Sprite(texture);this._bottomEdgeSprite.sourceRectangle=bottomSideSourceRect;this._bottomEdgeSprite.size.set(bottomSideSourceRect.width*textureScale,bottomSideSourceRect.height*textureScale)}this._middleSprite=new PintarJS.Sprite(texture);this._textureScale=this.__getFromOptions(options,"textureScale");this._middleSourceRect=this.__getFromOptions(options,"middleSourceRect")}get requiredOptions(){return["texture","middleSourceRect"]}drawImp(pintar){var destRect=this.getBoundingBox();var heightLeft=destRect.height;var offsetY=0;if(this._topEdgeSprite){this._topEdgeSprite.position.set(destRect.x,destRect.y);pintar.drawSprite(this._topEdgeSprite);heightLeft-=this._topEdgeSprite.size.y;offsetY+=this._topEdgeSprite.size.y}if(this._bottomEdgeSprite){this._bottomEdgeSprite.position.set(destRect.x,destRect.bottom-this._bottomEdgeSprite.height);pintar.drawSprite(this._bottomEdgeSprite);heightLeft-=this._bottomEdgeSprite.size.y}if(this._middleSprite){this._middleSprite.sourceRectangle=this._middleSourceRect.clone();this._middleSprite.size.set(this._middleSourceRect.width*this._textureScale,this._middleSourceRect.height*this._textureScale);while(heightLeft>0){this._middleSprite.position.set(destRect.x,destRect.y+offsetY);if(this._middleSprite.size.y>heightLeft){var toCut=this._middleSprite.size.y-heightLeft;this._middleSprite.size.y-=toCut;this._middleSprite.sourceRectangle.height-=toCut/this._textureScale}pintar.drawSprite(this._middleSprite);heightLeft-=this._middleSprite.size.y;offsetY+=this._middleSprite.size.y}}}}module.exports=VerticalLine},{"../pintar":18,"../size_modes":20,"./ui_element":14}],16:[function(require,module,exports){var UI={UIRoot:require("./elements/root"),UIElement:require("./elements/ui_element"),ProgressBar:require("./elements/progress_bar"),Container:require("./elements/container"),Panel:require("./elements/panel"),Paragraph:require("./elements/paragraph"),HorizontalLine:require("./elements/horizontal_line"),VerticalLine:require("./elements/vertical_line"),Button:require("./elements/button"),Sprite:require("./elements/sprite"),SlicedSprite:require("./elements/sliced_sprite"),Slider:require("./elements/slider"),Cursor:require("./elements/cursor"),InputManager:require("./input/input_manager"),Anchors:require("./anchors"),SizeModes:require("./size_modes"),SidesProperties:require("./sides_properties"),UIPoint:require("./ui_point"),CursorTypes:require("./cursor_types")};const pintar=require("./pintar");pintar.UI=UI;module.exports=UI},{"./anchors":1,"./cursor_types":2,"./elements/button":3,"./elements/container":4,"./elements/cursor":5,"./elements/horizontal_line":6,"./elements/panel":7,"./elements/paragraph":8,"./elements/progress_bar":9,"./elements/root":10,"./elements/sliced_sprite":11,"./elements/slider":12,"./elements/sprite":13,"./elements/ui_element":14,"./elements/vertical_line":15,"./input/input_manager":17,"./pintar":18,"./sides_properties":19,"./size_modes":20,"./ui_point":21}],17:[function(require,module,exports){"use strict";const PintarJS=require("../pintar");class InputManager{constructor(pintar){var canvas=this._canvas=pintar._canvas;this._mouseButtons={0:false,1:false,2:false};this._mouseButtonsPrevStates=JSON.parse(JSON.stringify(this._mouseButtons));this._mouseWheel=0;this.mousePositionFactor=1;this._mousePosition=new PintarJS.Point(0,0);this.setCursorDefault();this._mouseDownEventListener=(e=>{this._mouseButtons[e.button]=true});canvas.addEventListener("mousedown",this._mouseDownEventListener);this._mouseUpEventListener=(e=>{this._mouseButtons[e.button]=false});canvas.addEventListener("mouseup",this._mouseUpEventListener);this._mouseLeaveEventListener=(e=>{this._mouseOutside=true});canvas.addEventListener("mouseleave",this._mouseLeaveEventListener);this._mouseWheelEventListener=(e=>{this._mouseWheel=e.deltaY});canvas.addEventListener("mousewheel",this._mouseWheelEventListener);this._mouseMoveEventListener=(e=>{this._mousePosition=new PintarJS.Point(e.offsetX,e.offsetY);this._mouseOutside=false});canvas.addEventListener("mousemove",this._mouseMoveEventListener)}cleanup(){canvas.removeEventListener("mousedown",this._mouseDownEventListener);canvas.removeEventListener("mouseup",this._mouseUpEventListener);canvas.removeEventListener("mouseleave",this._mouseLeaveEventListener);canvas.removeEventListener("mousewheel",this._mouseWheelEventListener);canvas.removeEventListener("mousemove",this._mouseMoveEventListener)}startUpdate(){this.setCursorDefault();var timeNow=(new Date).getTime();this._deltaTime=this._prevTime?(timeNow-this._prevTime)/1e3:.1;this._prevTime=timeNow}endUpdate(){this._mouseWheel=0;this._mouseButtonsPrevStates=JSON.parse(JSON.stringify(this._mouseButtons))}get isMouseOutside(){return Boolean(this._mouseOutside)}get cursorType(){return this._cursorType}setCursorDefault(){this._cursorType="default"}setCursor(cursorType){this._cursorType=cursorType}get mousePosition(){var ret=this._mousePosition.clone();ret.x*=this.mousePositionFactor;ret.y*=this.mousePositionFactor;return ret}get leftMouseDown(){return this._mouseButtons[0]&&!this._mouseOutside}get rightMouseDown(){return this._mouseButtons[2]&&!this._mouseOutside}get leftMousePrevDown(){return this._mouseButtonsPrevStates[0]}get rightMousePrevDown(){return this._mouseButtonsPrevStates[2]}get leftMouseClick(){return!this._mouseClick[0]&&this._mouseButtonsPrevStates[0]}get rightMouseClick(){return!this._mouseClick[2]&&this._mouseButtonsPrevStates[2]}get mouseWheelChange(){return this._mouseWheel}get deltaTime(){return this._deltaTime}}module.exports=InputManager},{"../pintar":18}],18:[function(require,module,exports){var pintar=window.PintarJS||window.pintar;if(!pintar){throw new Error("Missing PintarJS main object.")}module.exports=pintar},{}],19:[function(require,module,exports){"use strict";const getValueAndType=require("./utils").getValueAndType;class SidesProperties{constructor(left,right,top,bottom){this.left=left||0;this.right=right||0;this.top=top||0;this.bottom=bottom||0;this.leftMode=this.rightMode=this.topMode=this.bottomMode="px"}set(left,right,top,bottom){this.left=left;this.right=right;this.top=top;this.bottom=bottom}get left(){return this._left}get right(){return this._right}get top(){return this._top}get bottom(){return this._bottom}set left(value){var valueSplit=getValueAndType(value);this._left=valueSplit.value;this.leftMode=this.leftMode||valueSplit.mode}set right(value){var valueSplit=getValueAndType(value);this._right=valueSplit.value;this.rightMode=this.rightMode||valueSplit.mode}set top(value){var valueSplit=getValueAndType(value);this._top=valueSplit.value;this.topMode=this.topMode||valueSplit.mode}set bottom(value){var valueSplit=getValueAndType(value);this._bottom=valueSplit.value;this.bottomMode=this.bottomMode||valueSplit.mode}equals(other){return this.left===other.left&&this.right===other.right&&this.top===other.top&&this.bottom===other.bottom&&this.leftMode===other.leftMode&&this.rightMode===other.rightMode&&this.topMode===other.topMode&&this.bottomMode===other.bottomMode}clone(){var ret=new SidesProperties(this.left,this.right,this.top,this.bottom);ret.leftMode=this.leftMode;ret.rightMode=this.rightMode;ret.topMode=this.topMode;ret.bottomMode=this.bottomMode;return ret}}module.exports=SidesProperties},{"./utils":22}],20:[function(require,module,exports){"use strict";module.exports={Pixels:"px",Percents:"%"}},{}],21:[function(require,module,exports){"use strict";const PintarJS=require("./pintar");const SizeModes=require("./size_modes");const getValueAndType=require("./utils").getValueAndType;class UIPoint extends PintarJS.Point{constructor(x,modeX,y,modeY){super(x,y);this.xMode=modeX||SizeModes.Pixels;this.yMode=modeY||SizeModes.Pixels}get x(){return this._x}get y(){return this._y}set x(value){var valueSplit=getValueAndType(value);this._x=valueSplit.value;this.xMode=this.xMode||valueSplit.mode}set y(value){var valueSplit=getValueAndType(value);this._y=valueSplit.value;this.yMode=this.yMode||valueSplit.mode}clone(){return new UIPoint(this.x,this.xMode,this.y,this.yMode)}equals(other){return other&&this.x==other.x&&this.y==other.y&&this.xMode==other.xMode&&this.yMode==other.yMode}}UIPoint.zero=function(){return new UIPoint(0,"px",0,"px")};UIPoint.one=function(){return new UIPoint(1,"px",1,"px")};UIPoint.half=function(){return new UIPoint(.5,"px",.5,"px")};module.exports=UIPoint},{"./pintar":18,"./size_modes":20,"./utils":22}],22:[function(require,module,exports){"use strict";module.exports={lerp:function(start,end,a){return(1-a)*start+a*end},MoveTowards:function(start,end,a){if(start===end){return end}var sign=Math.sign(end-start);var ret=start+sign*a;if(sign>0&&ret>end){ret=end}else if(sign<0&&ret<end){ret=end}return ret},getValueAndType:function(value){if(typeof value==="number"){return{value:value}}value=String(value);if(value[value.length-1]==="%"){return{value:Number(value.substr(0,value.length-1)),mode:"%"}}else if(value.substr(value.length-2)==="px"){return{value:Number(value.substr(0,value.length-2)),mode:"px"}}return{value:Number(value)}}}},{}]},{},[16])(16)});