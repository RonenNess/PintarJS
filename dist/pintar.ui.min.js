(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}(g.PintarJS||(g.PintarJS={})).UI=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){"use strict";module.exports={TopLeft:"TopLeft",TopCenter:"TopCenter",TopRight:"TopRight",CenterLeft:"CenterLeft",Center:"Center",CenterRight:"CenterRight",BottomLeft:"BottomLeft",BottomCenter:"BottomCenter",BottomCenterRight:"BottomCenterRight",Auto:"Auto",AutoInline:"AutoInline",Fixed:"Fixed"}},{}],2:[function(require,module,exports){"use strict";const UIElement=require("./ui_element");const PintarJS=require("./pintar");const SidesProperties=require("./sides_properties");const SizeModes=require("./size_modes");const Anchors=require("./anchors");const Panel=require("./panel");class Container extends UIElement{constructor(theme,skin){super();var options=this.getOptionsFromTheme(theme,skin);this._children=[];this.padding=options.padding||new SidesProperties(10,10,10,10);this.paddingMode=options.paddingMode||SizeModes.Pixels;this.__background=null;if(options.background){this.background=new Panel(theme,options.background)}}get background(){return this.__background}set background(backgroundElement){if(this.__background){this.__background._setParent(null)}backgroundElement._setParent(this);backgroundElement.ignoreParentPadding=true;this.__background=backgroundElement}addChild(element){if(element.parent){throw new Error("Element to add already have a parent!")}this._children.push(element);element._setParent(this)}removeChild(element){if(element.parent!==this){throw new Error("Element to remove does not belong to this container!")}var index=this._children.indexOf(element);if(index!==-1){this._children.splice(index,1);element._setParent(null)}}getInternalBoundingBox(){var ret=this.getBoundingBox();var padding=this._convertSides(this.padding,this.paddingMode);ret.x+=padding.left;ret.y+=padding.top;ret.width-=padding.right+padding.left;ret.height-=padding.bottom+padding.top;return ret}draw(pintar){if(this.background){this.background.draw(pintar)}for(var i=0;i<this._children.length;++i){this._children[i].draw(pintar)}}update(input){super.update(input);if(this.background){this.background.update(input);this.background.size=this.size}var lastElement=null;for(var i=0;i<this._children.length;++i){var element=this._children[i];var needToSetAuto=false;if(element.anchor===Anchors.AutoInline){if(lastElement){element.offset.set(0,lastElement.offset.y+lastElement.size.y);if(element.offset.x>this.size.x){needToSetAuto=true}}else{element.offset.set(0,0)}}if(needToSetAuto||element.anchor===Anchors.Auto){if(lastElement){element.offset.set(0,lastElement.offset.y+lastElement.size.y)}else{element.offset.set(0,0)}}element.update(input);lastElement=element}}}module.exports=Container},{"./anchors":1,"./panel":5,"./pintar":6,"./sides_properties":9,"./size_modes":10,"./ui_element":12}],3:[function(require,module,exports){var UI={UIRoot:require("./root"),UIElement:require("./ui_element"),ProgressBar:require("./progress_bar"),InputManager:require("./input_manager"),Container:require("./container"),Anchors:require("./anchors"),SlicedSprite:require("./sliced_sprite"),SizeModes:require("./size_modes"),SidesProperties:require("./sides_properties"),Panel:require("./panel")};const pintar=require("./pintar");pintar.UI=UI;module.exports=UI},{"./anchors":1,"./container":2,"./input_manager":4,"./panel":5,"./pintar":6,"./progress_bar":7,"./root":8,"./sides_properties":9,"./size_modes":10,"./sliced_sprite":11,"./ui_element":12}],4:[function(require,module,exports){"use strict";class InputManager{get mousePosition(){throw new Error("Not Implemented!")}get isLeftMouseDown(){throw new Error("Not Implemented!")}get isRightMouseDown(){throw new Error("Not Implemented!")}get mouseWheelChange(){throw new Error("Not Implemented!")}}module.exports=InputManager},{}],5:[function(require,module,exports){"use strict";const PintarJS=require("./pintar");const SlicedSprite=require("./sliced_sprite");class Panel extends SlicedSprite{constructor(theme,skin){super(theme,skin||"default")}get requiredOptions(){return["texture","externalSourceRect","internalSourceRect"]}}module.exports=Panel},{"./pintar":6,"./sliced_sprite":11}],6:[function(require,module,exports){var pintar=window.PintarJS||window.pintar;if(!pintar){throw new Error("Missing PintarJS main object.")}module.exports=pintar},{}],7:[function(require,module,exports){"use strict";const UIElement=require("./ui_element");const PintarJS=require("./pintar");const SlicedSprite=require("./sliced_sprite");const Anchors=require("./anchors");const SizeModes=require("./size_modes");class ProgressBar extends UIElement{constructor(theme,skin){super();var options=this.getOptionsFromTheme(theme,skin);this.fillOffset=options.fillOffset||PintarJS.Point.zero();var textureScale=options.textureScale||1;this.backgroundSprite=new SlicedSprite({texture:options.texture,externalSourceRect:options.backgroundExternalSourceRect,internalSourceRect:options.backgroundInternalSourceRect,textureScale:textureScale});this.backgroundSprite.color=options.backgroundColor||PintarJS.Color.white();this.backgroundSprite.anchor=Anchors.Fixed;this.backgroundSprite.sizeMode=SizeModes.Pixels;this.fillSprite=new SlicedSprite({texture:options.texture,externalSourceRect:options.fillExternalSourceRect,internalSourceRect:options.fillInternalSourceRect,textureScale:textureScale});this.fillSprite.color=options.fillColor||PintarJS.Color.white();this.fillSprite.anchor=Anchors.Fixed;this.fillSprite.sizeMode=SizeModes.Pixels;this.fillWidthToRemove=Math.round(options.backgroundExternalSourceRect.width-options.fillExternalSourceRect.width)*textureScale;this.fillHeightToRemove=Math.round(options.backgroundExternalSourceRect.height-options.fillExternalSourceRect.height)*textureScale;if(options.foregroundExternalSourceRect){this.foregroundSprite=new SlicedSprite({texture:options.texture,externalSourceRect:options.foregroundExternalSourceRect,internalSourceRect:options.foregroundInternalSourceRect,textureScale:textureScale});this.foregroundSprite.color=options.foregroundColor||PintarJS.Color.white();this.foregroundSprite.anchor=Anchors.Fixed;this.foregroundSprite.sizeMode=SizeModes.Pixels}this.size.y=options.height||options.backgroundExternalSourceRect.height*textureScale;this.value=1}get requiredOptions(){return["texture","fillExternalSourceRect","fillInternalSourceRect","backgroundExternalSourceRect","backgroundInternalSourceRect"]}get fillColor(){return this.fillSprite.color}set fillColor(color){this.fillSprite.color=color}get fillBlendMode(){return this.fillSprite.blendMode}set fillBlendMode(blendMode){this.fillSprite.blendMode=blendMode}draw(pintar){var dest=this.getBoundingBox();this.backgroundSprite.offset=dest.getPosition();this.backgroundSprite.size=dest.getSize();this.backgroundSprite.draw(pintar);if(this.value>0){this.fillSprite.offset=dest.getPosition().add(this.fillOffset);this.fillSprite.size.x=this.backgroundSprite.size.x-this.fillWidthToRemove;this.fillSprite.size.y=this.backgroundSprite.size.y-this.fillHeightToRemove;this.fillSprite.draw(pintar)}if(this.foregroundSprite){this.foregroundSprite.offset=dest.getPosition();this.foregroundSprite.size=dest.getSize();this.foregroundSprite.draw(pintar)}}}module.exports=ProgressBar},{"./anchors":1,"./pintar":6,"./size_modes":10,"./sliced_sprite":11,"./ui_element":12}],8:[function(require,module,exports){"use strict";const Container=require("./container");const PintarJS=require("./pintar");class UIRoot extends Container{constructor(pintar,inputManager){super({UIRoot:{default:{}}});this.pintar=pintar;this.inputManager=inputManager;this.padding.set(0,0,0,0)}getBoundingBox(){return this.pintar.canvasRect}draw(pintar){super.draw(this.pintar)}update(input){super.update(this.inputManager)}}module.exports=UIRoot},{"./container":2,"./pintar":6}],9:[function(require,module,exports){"use strict";class SidesProperties{constructor(left,right,top,bottom){this.left=left||0;this.right=right||0;this.top=top||0;this.bottom=bottom||0}set(left,right,top,bottom){this.left=left;this.right=right;this.top=top;this.bottom=bottom}clone(){return new SidesProperties(this.left,this.right,this.top,this.bottom)}}module.exports=SidesProperties},{}],10:[function(require,module,exports){"use strict";module.exports={Pixels:"px",Percents:"%"}},{}],11:[function(require,module,exports){"use strict";const PintarJS=require("./pintar");const UIElement=require("./ui_element");class SlicedSprite extends UIElement{constructor(options,skin){super();if(skin){options=this.getOptionsFromTheme(options,skin)}var texture=options.texture;var textureScale=options.textureScale||1;var wholeSourceRect=this.externalSourceRect=options.externalSourceRect;var fillSourceRect=this.internalSourceRect=options.internalSourceRect;var fillMode=options.fillMode||SlicedSprite.FillModes.Tiled;this.leftFrameSourceRect=new PintarJS.Rectangle(wholeSourceRect.x,fillSourceRect.y,fillSourceRect.x-wholeSourceRect.x,fillSourceRect.height);this.rightFrameSourceRect=new PintarJS.Rectangle(fillSourceRect.right,fillSourceRect.y,wholeSourceRect.right-fillSourceRect.right,fillSourceRect.height);this.topFrameSourceRect=new PintarJS.Rectangle(fillSourceRect.x,wholeSourceRect.y,fillSourceRect.width,fillSourceRect.y-wholeSourceRect.y);this.bottomFrameSourceRect=new PintarJS.Rectangle(fillSourceRect.x,fillSourceRect.bottom,fillSourceRect.width,wholeSourceRect.bottom-fillSourceRect.bottom);this.topLeftFrameCornerSourceRect=new PintarJS.Rectangle(wholeSourceRect.x,wholeSourceRect.y,fillSourceRect.x-wholeSourceRect.x,fillSourceRect.y-wholeSourceRect.y);this.topRightFrameCornerSourceRect=new PintarJS.Rectangle(fillSourceRect.right,wholeSourceRect.y,wholeSourceRect.right-fillSourceRect.right,fillSourceRect.y-wholeSourceRect.y);this.bottomLeftFrameCornerSourceRect=new PintarJS.Rectangle(wholeSourceRect.x,fillSourceRect.bottom,fillSourceRect.x-wholeSourceRect.x,wholeSourceRect.bottom-fillSourceRect.bottom);this.bottomRightFrameCornerSourceRect=new PintarJS.Rectangle(fillSourceRect.right,fillSourceRect.bottom,wholeSourceRect.right-fillSourceRect.right,wholeSourceRect.bottom-fillSourceRect.bottom);this.topFrameSprite=new PintarJS.Sprite(texture);this.bottomFrameSprite=new PintarJS.Sprite(texture);this.leftFrameSprite=new PintarJS.Sprite(texture);this.rightFrameSprite=new PintarJS.Sprite(texture);this.topLeftCornerFrameSprite=new PintarJS.Sprite(texture);this.bottomLeftCornerFrameSprite=new PintarJS.Sprite(texture);this.topRightCornerFrameSprite=new PintarJS.Sprite(texture);this.bottomRightCornerFrameSprite=new PintarJS.Sprite(texture);this.fillSprite=new PintarJS.Sprite(texture);this.fillColor=options.fillColor||PintarJS.Color.white();this.frameColor=options.frameColor||PintarJS.Color.white();this.frameScale=textureScale;this.fillScale=textureScale;this.blendMode=PintarJS.BlendModes.AlphaBlend;this.fillMode=fillMode||SlicedSprite.FillModes.Tiled}set color(color){this.fillColor=color.clone();this.frameColor=color.clone()}draw(pintar){var destRect=this.getBoundingBox();var scaleFactor=this.absoluteScale;var frameScale=scaleFactor*this.frameScale;var position=destRect.getPosition();destRect.width-=this.bottomRightFrameCornerSourceRect.width*frameScale;destRect.height-=this.bottomRightFrameCornerSourceRect.height*frameScale;var drawTopAndBottomFrames=(sprite,sourceRect,extraY)=>{if(sourceRect.width==0||sourceRect.height==0){return}sprite.sourceRectangle=sourceRect.clone();sprite.origin=PintarJS.Point.zero();sprite.position=position.clone();sprite.blendMode=this.blendMode;sprite.position.y+=extraY;sprite.position.x+=this.topLeftFrameCornerSourceRect.width*frameScale;sprite.width=sprite.sourceRectangle.width*frameScale;sprite.height=sprite.sourceRectangle.height*frameScale;sprite.color=this.frameColor;var exceededRightSide=false;while(!exceededRightSide){var spriteRight=sprite.position.x+sprite.width;exceededRightSide=spriteRight>=destRect.right;if(exceededRightSide){var toCut=spriteRight-destRect.right;if(toCut>0){sprite.sourceRectangle.width-=Math.round(toCut*(sprite.sourceRectangle.width/sprite.width));sprite.width-=toCut}}pintar.drawSprite(sprite);sprite.position.x+=sprite.width}};drawTopAndBottomFrames(this.topFrameSprite,this.topFrameSourceRect,0);drawTopAndBottomFrames(this.bottomFrameSprite,this.bottomFrameSourceRect,destRect.height);var drawLeftAndRightFrames=(sprite,sourceRect,extraX)=>{if(sourceRect.width==0||sourceRect.height==0){return}sprite.sourceRectangle=sourceRect.clone();sprite.origin=PintarJS.Point.zero();sprite.position=position.clone();sprite.blendMode=this.blendMode;sprite.position.x+=extraX;sprite.position.y+=this.topLeftFrameCornerSourceRect.height*frameScale;sprite.width=sprite.sourceRectangle.width*frameScale;sprite.height=sprite.sourceRectangle.height*frameScale;sprite.color=this.frameColor;var exceededBottomSide=false;while(!exceededBottomSide){var spriteBottom=sprite.position.y+sprite.height;exceededBottomSide=spriteBottom>=destRect.bottom;if(exceededBottomSide){var toCut=spriteBottom-destRect.bottom;if(toCut>0){sprite.sourceRectangle.height-=Math.round(toCut*(sprite.sourceRectangle.height/sprite.height));sprite.height-=toCut}}pintar.drawSprite(sprite);sprite.position.y+=sprite.height}};drawLeftAndRightFrames(this.leftFrameSprite,this.leftFrameSourceRect,0);drawLeftAndRightFrames(this.rightFrameSprite,this.rightFrameSourceRect,destRect.width);var drawFramesCorner=(sprite,sourceRect,posx,posy)=>{if(sourceRect.width==0||sourceRect.height==0){return}sprite.sourceRectangle=sourceRect.clone();sprite.origin=PintarJS.Point.zero();sprite.position=position.clone();sprite.blendMode=this.blendMode;sprite.position.x+=posx;sprite.position.y+=posy;sprite.width=sprite.sourceRectangle.width*frameScale;sprite.height=sprite.sourceRectangle.height*frameScale;sprite.color=this.frameColor;pintar.drawSprite(sprite)};drawFramesCorner(this.topLeftCornerFrameSprite,this.topLeftFrameCornerSourceRect,0,0);drawFramesCorner(this.topRightCornerFrameSprite,this.topRightFrameCornerSourceRect,destRect.width,0);drawFramesCorner(this.bottomLeftCornerFrameSprite,this.bottomLeftFrameCornerSourceRect,0,destRect.height);drawFramesCorner(this.bottomRightCornerFrameSprite,this.bottomRightFrameCornerSourceRect,destRect.width,destRect.height);if(this.internalSourceRect.width&&this.internalSourceRect.height){var sprite=this.fillSprite;sprite.origin=PintarJS.Point.zero();sprite.position=position.clone();sprite.blendMode=this.blendMode;sprite.position.x+=this.topLeftCornerFrameSprite.width;sprite.position.y+=this.topLeftCornerFrameSprite.height;sprite.width=destRect.width-this.bottomLeftCornerFrameSprite.width;sprite.height=destRect.height-this.bottomLeftCornerFrameSprite.height;sprite.color=this.fillColor;if(this.fillMode===SlicedSprite.FillModes.Stretch){sprite.sourceRectangle=this.internalSourceRect.clone();pintar.drawSprite(sprite)}else if(this.fillMode===SlicedSprite.FillModes.Tiled){var fillScale=scaleFactor*this.fillScale;var fillSize=new PintarJS.Point(this.internalSourceRect.width*fillScale,this.internalSourceRect.height*fillScale);sprite.size=fillSize.clone();var startPosition=sprite.position.clone();for(var i=0;i<destRect.width/fillSize.x;++i){sprite.sourceRectangle=this.internalSourceRect.clone();sprite.size.x=fillSize.x;sprite.position.x=startPosition.x+sprite.width*i;if(sprite.position.x>=this.rightFrameSprite.position.x){break}var spriteRight=sprite.position.x+sprite.size.x;if(spriteRight>this.rightFrameSprite.position.x){var toCut=spriteRight-this.rightFrameSprite.position.x;if(toCut>0){sprite.sourceRectangle.width-=Math.round(toCut*(sprite.sourceRectangle.width/sprite.width));sprite.width-=toCut}}if(sprite.width==0){break}for(var j=0;j<destRect.height/fillSize.y;++j){sprite.size.y=fillSize.y;sprite.position.y=startPosition.y+sprite.height*j;if(sprite.position.y>=this.bottomFrameSprite.position.y){break}var spriteBottom=sprite.position.y+sprite.size.y;if(spriteBottom>this.bottomFrameSprite.position.y){var toCut=spriteBottom-this.bottomFrameSprite.position.y;if(toCut>0){sprite.sourceRectangle.height-=Math.round(toCut*(sprite.sourceRectangle.height/sprite.height));sprite.height-=toCut}}if(sprite.height==0){break}pintar.drawSprite(sprite)}}}else if(this.fillMode===SlicedSprite.FillModes.None){}else{throw new Error("Invalid fill mode!")}}}}SlicedSprite.FillModes={Tiled:1,Stretch:2,None:3};module.exports=SlicedSprite},{"./pintar":6,"./ui_element":12}],12:[function(require,module,exports){"use strict";const PintarJS=require("./pintar");const Anchors=require("./anchors");const SizeModes=require("./size_modes");const Sides=require("./sides_properties");class UIElement{constructor(){this.offset=PintarJS.Point.zero();this.offsetMode=SizeModes.Pixels;this.size=new PintarJS.Point(100,100);this.sizeMode=SizeModes.Pixels;this.anchor=Anchors.TopLeft;this.scale=1;this.ignoreParentPadding=false;this.__parent=null}getOptionsFromTheme(theme,skin){var elementName=this.constructor.name;var options=theme[elementName];if(!options){throw new Error("Missing definition for object type '"+elementName+"' in UI theme!")}skin=skin||"default";options=options[skin];if(!options){throw new Error("Missing definition for object type '"+elementName+"' and skin '"+skin+"' in UI theme!")}var required=this.requiredOptions;for(var i=0;i<required.length;++i){if(!(required[i]in options)){throw new Error("Missing mandatory option '"+required[i]+"' in element type '"+elementName+"' options!")}}return options}get requiredOptions(){return[]}_setParent(parent){this.__parent=parent}get absoluteScale(){return this.scale*UIElement.globalScale}_convertSize(val,mode){switch(mode){case SizeModes.Pixels:var ret=val.clone();var scale=this.absoluteScale;ret.x*=scale;ret.y*=scale;return ret;case SizeModes.Percents:var parentSize=this.getParentInternalBoundingBox().size;return new PintarJS.Point(val.x/100*parentSize.x,val.y/100*parentSize.y);default:throw new Error("Invalid size mode!")}}_convertSides(val,mode){switch(mode){case SizeModes.Pixels:var ret=val.clone();var scale=this.absoluteScale;ret.left*=scale;ret.right*=scale;ret.top*=scale;ret.bottom*=scale;return ret;case SizeModes.Percents:var parentSize=this.getParentInternalBoundingBox().size;return new Sides(val.left/100*parentSize.x,val.right/100*parentSize.x,val.top/100*parentSize.y,val.bottom/100*parentSize.y);default:throw new Error("Invalid size mode!")}}getSizeInPixels(){return this._convertSize(this.size,this.sizeMode)}getOffsetInPixels(){return this._convertSize(this.offset,this.offsetMode)}get parent(){return this.__parent}draw(pintar){throw new Error("Not Implemented!")}update(input){}getBoundingBox(){var position=this.getDestTopLeftPosition();var size=this.getSizeInPixels();return new PintarJS.Rectangle(position.x,position.y,size.x,size.y)}getInternalBoundingBox(){return this.getBoundingBox()}getParentInternalBoundingBox(){if(!this.parent){throw new Error("Missing parent element! Did you forget to create a UI root and add elements to it?")}return this.ignoreParentPadding?this.parent.getBoundingBox():this.parent.getInternalBoundingBox()}getDestTopLeftPosition(){if(this.anchor===Anchors.Fixed){return this.offset.clone()}var parentRect=this.getParentInternalBoundingBox();var selfSize=this.getSizeInPixels();var offset=this.getOffsetInPixels();var ret=new PintarJS.Point;if(this.__cachedTopLeftPos&&this.anchor===this.__lastAnchor&&selfSize.equals(this.__lastSize||PintarJS.Point.zero())&&offset.equals(this.__lastOffset||PintarJS.Point.zero())&&parentRect.equals(this.__lastParentRect||new PintarJS.Rectangle)){return this.__cachedTopLeftPos}switch(this.anchor){case Anchors.TopLeft:ret.set(parentRect.x,parentRect.y);break;case Anchors.TopCenter:ret.set(parentRect.x+parentRect.width/2-selfSize.x/2,parentRect.y);break;case Anchors.TopRight:ret.set(parentRect.right-selfSize.x,parentRect.y);break;case Anchors.CenterLeft:ret.x=parentRect.x;ret.y=parentRect.y+parentRect.height/2-selfSize.y/2;break;case Anchors.Center:ret.x=parentRect.x+parentRect.width/2-selfSize.x/2;ret.y=parentRect.y+parentRect.height/2-selfSize.y/2;break;case Anchors.CenterRight:ret.x=parentRect.right-selfSize.x;ret.y=parentRect.y+parentRect.height/2-selfSize.y/2;break;case Anchors.BottomLeft:ret.x=parentRect.x;ret.y=parentRect.bottom-selfSize.y;break;case Anchors.BottomCenter:ret.x=parentRect.x+parentRect.width/2-selfSize.x/2;ret.y=parentRect.bottom-selfSize.y;break;case Anchors.BottomRight:ret.x=parentRect.right-selfSize.x;ret.y=parentRect.bottom-selfSize.y;break}ret.x+=offset.x;ret.y+=offset.y;this.__cachedTopLeftPos=ret.clone();this.__lastAnchor=this.anchor;this.__lastSize=selfSize;this.__lastOffset=offset;this.__lastParentRect=parentRect.clone();return ret}getCenterPosition(){var bb=this.getBoundingBox();return bb.getCenter()}}UIElement.globalScale=1;module.exports=UIElement},{"./anchors":1,"./pintar":6,"./sides_properties":9,"./size_modes":10}]},{},[3])(3)});